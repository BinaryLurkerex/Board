# Тут описана модель для хранения информации формы "Регистрация модуля"
from django.db import models
# class reg(models.Model):
#     FAMILY_CHOICES = [
#         ('MU', 'Модули управляющие'),
#         ('MVVS', 'Модули ввода-вывода сигналов'),
#         ('MR', 'Модули расширения'),
#         ('MD', 'Модули диагностики'),
#         ('MVVS_SPIN', 'Модули ввода-вывода сигналов СПиН'),
#         ('KP', 'Объединительные платы'),
#         ('BOS', 'Оптические свитчи, коммутаторы'),
#         ('BV', 'Блоки питания'),
#         ('SK', 'Соединители клеммные'),
#         ('KABELS', 'Кабельная продукция'),
#         ('KONSTRUCTIVEELEMINT', 'Конструктивный элемент'),
#     ]
#     TYPE_CHOICES = [
#         # Модули управляющие
#         ('MU.1', 'Модуль МУ.1 еЦ5.155.01904'),
#         ('MU.2', 'Модуль МУ.1 еЦ5.155.019-0104'),
#         ('MU.3', 'Модуль МУ.3 еЦ5.155.02304'),
#         ('MU.4', 'Модуль МУ.3 еЦ5.155.023-0104'),
#
#         # Модули ввода-вывода сигналов
#         ('MVVS.1', 'Модуль МПД'),
#         ('MVVS.2', 'Модуль МВД'),
#         ('MVVS.3', 'Модуль МВД‑У'),
#         ('MVVS.4', 'Модуль МПТ'),
#         ('MVVS.5', 'Модуль МВА'),
#         ('MVVS.6', 'Модуль МПА'),
#         ('MVVS.7', 'Модуль МПИ‑У'),
#         ('MVVS.8', 'Модуль МСР'),
#         ('MVVS.9', 'Модуль МКА'),
#         ('MVVS.10', 'Модуль МППТ'),
#         ('MVVS.11', 'Модуль МПИ'),
#
#         # Модули расширения
#         ('MR.1', 'Модуль МР'),
#
#         # Модули диагностики
#         ('MD.1', 'Модуль МД'),
#
#         # Модули ввода-вывода сигналов СПиН
#         ('MVVS_SPIN.1', 'Модуль МК'),
#
#         # Объединительные платы
#         ('KP.1', 'Плата объединительная КП.1'),
#
#         # Оптические свитчи, коммутаторы
#         ('BOS.1', 'Блок БОС.1'),
#         ('BOS.2', 'Блок БОС.2'),
#         ('BOS.3', 'Модуль МОС.24'),
#         ('BOS.4', 'Модуль МОС.25'),
#
#         # Блоки питания
#         ('BV.1', 'Блок БВ.1еЦ5.139.14404'),
#         ('BV.2', 'Блок БВ.1еЦ5.139.144-0104'),
#         ('BV.3', 'Блок БВ.1еЦ5.139.144-0204'),
#         ('BV.4', 'Блок БВ.1еЦ5.139.144-0304'),
#
#         # Соединители клеммные
#         ('SK.1', 'Соединитель клеммный СКеЦ5.282.24204'),
#         ('SK.2', 'Соединитель клеммный СКАеЦ5.282.25104'),
#         ('SK.3', 'Соединитель клеммный СКА‑УеЦ5.282.25304'),
#         ('SK.4', 'Соединитель клеммный СКПИеЦ5.282.24404'),
#         ('SK.5', 'Соединитель клеммный СКПИ.2еЦ5.282.26704'),
#         ('SK.6', 'Соединитель клеммный СКТДеЦ5.282.25204'),
#         ('SK.7', 'Соединитель клеммный СКДАеЦ5.282.24804'),
#         ('SK.8', 'Соединитель клеммный СКДДеЦ5.282.24704'),
#         ('SK.9', 'Соединитель клеммный СКДРеЦ5.282.25004'),
#         ('SK.10', 'Соединитель клеммный СКИМеЦ5.282.26104'),
#         ('SK.11', 'Соединитель клеммный СК‑МСРеЦ5.282.26604'),
#         ('SK.12', 'Соединитель клеммный СКД‑МСРеЦ5.282.26504'),
#         ('SK.13', 'Соединитель клеммный СК‑МКАеЦ5.282.25404'),
#         ('SK.14', 'Соединитель клеммный СКД‑МКАеЦ5.282.25504'),
#         ('SK.15', 'Соединитель клеммный СКНеЦ5.282.24904'),
#
#         # Кабельная продукция
#         ('KABELS.1', 'Кабель КАСеЦ6.641.73304'),
#         ('KABELS.2', 'Кабель КАСеЦ6.641.733-0104'),
#         # ... (добавьте остальные кабели по аналогии)
#
#         # Конструктивный элемент
#         ('KONSTRUCTIVEELEMINT.1', 'Каркас объединительный КО.1'),
#         ('KONSTRUCTIVEELEMINT.2', 'Заглушка еЦ6.433.069'),
#         ('KONSTRUCTIVEELEMINT.3', 'Заглушка еЦ6.433.070'),
#     ]
#
#     family = models.CharField(max_length=20, choices=FAMILY_CHOICES, verbose_name='Семейство')
#     type = models.CharField(max_length=255, choices=TYPE_CHOICES, verbose_name='Тип')
#     module_count = models.PositiveIntegerField(verbose_name='Количество модулей')
#     production_date = models.DateField(verbose_name='Дата производства')
#     history = models.TextField(max_length=10000, verbose_name='История модуля')
#
#     def __str__(self):
#         return f"{self.family} - {self.type}"

# Create your models here.

class reg(models.Model):
    # Удаляем family и type
    # family = models.CharField(max_length=20, choices=FAMILY_CHOICES, verbose_name='Семейство')
    # type = models.CharField(max_length=255, choices=TYPE_CHOICES, verbose_name='Тип')

    # ec_number = models.CharField(max_length=255, verbose_name='Номер ец')  # Новое поле
    ec_number = models.CharField(max_length=100, default='')
    module_count = models.PositiveIntegerField(verbose_name='Количество модулей')
    production_date = models.DateField(verbose_name='Дата производства')
    history = models.TextField(max_length=10000, verbose_name='История модуля')

    def __str__(self):
        return f"{self.ec_number} - {self.module_count}"  # Изменение в строковом представлении

